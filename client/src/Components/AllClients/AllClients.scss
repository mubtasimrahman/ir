@property --primary-color {
  syntax: "<color>";
  initial-value: black;
  inherits: false;
}

.all-clients-container {
  /* 3 slides has to add up to 1320px(for largest viewport). The left and right slides only have exposed 
  440px *0.8scale * 0.7translate =  246.4px. So 3 slides had width = 932.8px. Following, 1320px = x * 932.8px = 1.415
  lastly, 1.415*100 = 141.5/3 = 47.1698%,  Unfortunalely the estimate here is off as scaling and trasnlations
  are not uniform when calculating width */
  --width-slide-and-player: 45.5%;
  --exposed-cards: 70%;
  --container-aspect-ratio: 2/1;

  /* two gradients at left and right corner, offset by 2.5% up to account for non-centred nature of cards within
  container. Used color-mix to change opacity of colours and used gradeint color-stops to ensure smooth
  color shifts. Could not use rgba directly as it is not animatable */
  background-image: radial-gradient(
      farthest-corner at 0% 47.5%,
      color-mix(in srgb, var(--primary-color) 70%, transparent) 0%,
      color-mix(in srgb, var(--primary-color) 40%, transparent) 30%,
      transparent 65%
    ),
    radial-gradient(
      farthest-corner at 100% 47.5%,
      color-mix(in srgb, var(--primary-color) 70%, transparent) 0%,
      color-mix(in srgb, var(--primary-color) 40%, transparent) 30%,
      transparent 65%
    );
  transition: --primary-color 0.8s ease-in-out;
}

.slides {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  aspect-ratio: var(--container-aspect-ratio); // changed
}

.client-slide {
  position: absolute;
  width: var(--width-slide-and-player);
  aspect-ratio: 1/1; // changed
  transition: transform 0.4s ease-in-out, opacity 0.4s ease-in-out;
  cursor: pointer;
  border-radius: 0.5rem;

  img {
    aspect-ratio: 1/1; // changed
    height: 100%;
    border-radius: inherit;
  }

  &.center-slide {
    transform: translateX(0) scale(1);
    opacity: 1;
    z-index: 2;
  }

  &.right-slide {
    transform: translateX(var(--exposed-cards)) scale(0.8);
    opacity: 0.5;
    z-index: 1;
  }

  &.left-slide {
    transform: translateX(calc(var(--exposed-cards) * -1)) scale(0.8);
    opacity: 0.5;
    z-index: 1;
  }

  &.hidden-slide {
    opacity: 0;
    z-index: 0;
  }
}

.player {
  margin-inline: auto;
  background-color: #232323;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;

  // margin-top: 1rem;
  width: var(--width-slide-and-player);

  .song-info {
    .title {
      color: var(--website-white-colour);
      margin-left: 1rem;
    }

    .sub-line {
      display: flex;
      justify-content: space-between;
      margin-top: 0.25rem;

      .time {
        color: var(--website-white-colour);
      }
    }
  }
}

.progress {
  height: 0.35rem;
}

@media screen and (prefers-reduced-motion) {
  .all-clients-container {
    transition: none;
  }

  .client-slide {
    transition: none;
  }
}

@media screen and (width<1200px) {
  .all-clients-container {
    --width-slide-and-player: 55.5%;
    --exposed-cards: 50%;
    --container-aspect-ratio: 1.6/1;
  }
}

@media screen and (width<992px) {
  .all-clients-container {
    --width-slide-and-player: 60%;
    --exposed-cards: 44%;
    --container-aspect-ratio: 1.45/1;
  }
}

@media screen and (width<768px) {
  .all-clients-container {
    --width-slide-and-player: 62%;
    --exposed-cards: 40%;
  }
}
