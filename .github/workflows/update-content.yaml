name: update-content

on:
  workflow_dispatch:
    inputs:
      content:
        description: Updated JSON content
        required: true
        type: string
      filePath:
        description: Path to the JSON file
        required: true
        type: string
      imageFilePath:
        description: Directory for uploaded images
        required: false
        type: string
      mapping:
        description: Mapping between old and new images
        required: false
        type: string

jobs:
  update-content:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Conditional JSON update
      - name: Update JSON file
        if: ${{ inputs.content && inputs.filePath }}
        run: |
          echo "Updating JSON file..."
          content='${{ inputs.content }}'
          filePath='${{ inputs.filePath }}'
          # Parse JSON content to remove "uploadedFiles"
          echo "$content" | jq 'map(del(.uploadedFiles))' > "$filePath"

      # Step 3: Decode and replace images if mapping is provided
      - name: Decode and replace images
        if: ${{ inputs.imageFilePath && inputs.mapping }}
        run: |
          echo "Decoding and replacing images if required..."
          mapping='${{ inputs.mapping }}'
          imageFilePath='${{ inputs.imageFilePath }}'

          # Check if mapping and imageFilePath are provided
          if [[ -n "$mapping" && -n "$imageFilePath" ]]; then
            echo "Mapping and imageFilePath detected. Proceeding with decoding and replacing images..."

            # Ensure the target directory is writable
            mkdir -p "$imageFilePath"
            chmod -R u+w "$imageFilePath"

            # Iterate over mapping and decode the images
            echo "$mapping" | jq -r 'to_entries[] | [.key, .value] | @tsv' | while IFS=$'\t' read -r newFile oldFile; do
              echo "Processing $newFile -> $oldFile"
              echo "$newFile" | base64 --decode > "$imageFilePath/$oldFile"
            done
          else
            echo "No mapping or imageFilePath provided. Skipping image decoding and replacement."
          fi

      # Step 4: Commit and push changes
      - name: Commit and push changes
        run: |
          echo "Committing changes..."
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add "${{ inputs.filePath }}"
          if [ -n "${{ inputs.imageFilePath }}" ]; then
            git add "${{ inputs.imageFilePath }}"
          fi
          git commit -m "Update content and images via GitHub Actions" || echo "No changes to commit"
          git push
